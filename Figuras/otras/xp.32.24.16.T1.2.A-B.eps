%!PS-Adobe-2.0
%%Title: xp.32.24.16.T1.2.A-B.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Feb 12 11:20:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1260 600 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 600 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 1067 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 1067 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.005)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 1533 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 1533 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.01)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 2000 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 2000 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.015)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 2467 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 2467 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.02)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 2933 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 2933 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.025)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 3400 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 3400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.03)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 3867 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 3867 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.035)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 4333 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 4333 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.04)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1260 4800 M
63 0 V
5537 0 R
-63 0 V
stroke
1140 4800 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.045)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1527 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1527 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
2860 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2860 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
grestore
1.000 UL
LTb
4193 600 M
0 63 V
0 4137 R
0 -63 V
stroke
4193 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
5527 600 M
0 63 V
0 4137 R
0 -63 V
stroke
5527 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3)]
] -66.7 MCshow
grestore
1.000 UL
LTb
6860 600 M
0 63 V
0 4137 R
0 -63 V
stroke
6860 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1260 600 M
5600 0 V
0 4200 V
-5600 0 V
0 -4200 V
LTb
200 2700 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Symbol) 160.0 -60.0 true true 0 (h)]
] -46.7 MCshow
grestore
grestore
LTb
4060 100 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (H)]
] -66.7 MCshow
grestore
1.000 UP
LTb
5527 3867 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (T=1.2)]
] -66.7 MLshow
grestore
1.000 UL
LT0
5477 4137 M
0 600 V
1263 0 V
0 -600 V
-1263 0 V
0 600 R
1263 0 V
1.500 UP
1.000 UL
LT0
LTb
5477 4637 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=32)]
] -66.7 MLshow
grestore
LT0
6077 4637 M
543 0 V
1260 682 M
107 -20 V
160 -3 V
160 -11 V
160 -2 V
160 9 V
160 5 V
160 2 V
160 12 V
160 12 V
160 40 V
160 39 V
160 40 V
160 128 V
160 291 V
160 -67 V
160 341 V
160 820 V
160 -760 V
160 -375 V
160 -179 V
4567 756 L
160 66 V
4887 708 L
160 -68 V
160 -9 V
160 1 V
160 -14 V
160 -2 V
160 -5 V
160 -4 V
160 -2 V
160 -2 V
160 0 V
160 -1 V
160 -1 V
53 0 V
1367 662 Circle
1527 659 Circle
1687 648 Circle
1847 646 Circle
2007 655 Circle
2167 660 Circle
2327 662 Circle
2487 674 Circle
2647 686 Circle
2807 726 Circle
2967 765 Circle
3127 805 Circle
3287 933 Circle
3447 1224 Circle
3607 1157 Circle
3767 1498 Circle
3927 2318 Circle
4087 1558 Circle
4247 1183 Circle
4407 1004 Circle
4567 756 Circle
4727 822 Circle
4887 708 Circle
5047 640 Circle
5207 631 Circle
5367 632 Circle
5527 618 Circle
5687 616 Circle
5847 611 Circle
6007 607 Circle
6167 605 Circle
6327 603 Circle
6487 603 Circle
6647 602 Circle
6807 601 Circle
6348 4637 Circle
1.500 UP
1.000 UL
LT0
LTb
5477 4437 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=24)]
] -66.7 MLshow
grestore
LT0
6077 4437 M
543 0 V
1260 726 M
107 17 V
160 20 V
160 29 V
160 -22 V
160 43 V
160 -20 V
160 105 V
160 131 V
160 685 V
160 24 V
2967 797 L
160 574 V
160 971 V
160 2038 V
160 -91 V
160 -936 V
160 -803 V
160 -929 V
160 -599 V
4407 865 L
160 -82 V
160 -33 V
160 -27 V
160 -54 V
160 -17 V
160 -16 V
160 -9 V
160 -7 V
160 -3 V
160 -2 V
160 -7 V
160 -2 V
160 -3 V
160 0 V
160 -1 V
53 0 V
1367 743 TriUF
1527 763 TriUF
1687 792 TriUF
1847 770 TriUF
2007 813 TriUF
2167 793 TriUF
2327 898 TriUF
2487 1029 TriUF
2647 1714 TriUF
2807 1738 TriUF
2967 797 TriUF
3127 1371 TriUF
3287 2342 TriUF
3447 4380 TriUF
3607 4289 TriUF
3767 3353 TriUF
3927 2550 TriUF
4087 1621 TriUF
4247 1022 TriUF
4407 865 TriUF
4567 783 TriUF
4727 750 TriUF
4887 723 TriUF
5047 669 TriUF
5207 652 TriUF
5367 636 TriUF
5527 627 TriUF
5687 620 TriUF
5847 617 TriUF
6007 615 TriUF
6167 608 TriUF
6327 606 TriUF
6487 603 TriUF
6647 603 TriUF
6807 602 TriUF
6348 4437 TriUF
1.500 UP
1.000 UL
LT0
LTb
5477 4237 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=16)]
] -66.7 MLshow
grestore
LT0
6077 4237 M
543 0 V
1260 691 M
107 20 V
160 56 V
160 56 V
160 98 V
160 91 V
160 26 V
160 279 V
160 390 V
160 491 V
160 438 V
160 66 V
160 18 V
160 -391 V
160 -317 V
160 -462 V
160 -104 V
160 -249 V
4087 964 L
160 -47 V
160 -88 V
160 -59 V
160 -38 V
160 -17 V
160 -38 V
160 -25 V
160 -9 V
160 -10 V
160 -11 V
160 -7 V
160 -3 V
1367 711 TriD
1527 767 TriD
1687 823 TriD
1847 921 TriD
2007 1012 TriD
2167 1038 TriD
2327 1317 TriD
2487 1707 TriD
2647 2198 TriD
2807 2636 TriD
2967 2702 TriD
3127 2720 TriD
3287 2329 TriD
3447 2012 TriD
3607 1550 TriD
3767 1446 TriD
3927 1197 TriD
4087 964 TriD
4247 917 TriD
4407 829 TriD
4567 770 TriD
4727 732 TriD
4887 715 TriD
5047 677 TriD
5207 652 TriD
5367 643 TriD
5527 633 TriD
5687 622 TriD
5847 615 TriD
6007 612 TriD
6348 4237 TriD
1.000 UL
LTb
1260 600 M
5600 0 V
0 4200 V
-5600 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
