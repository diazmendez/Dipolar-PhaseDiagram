%!PS-Adobe-2.0
%%Title: c.32.24.16.T1.2.A-B.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Feb 12 11:11:50 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1380 600 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 600 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 1125 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 1125 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.0005)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 1650 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 1650 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.001)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 2175 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 2175 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.0015)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 2700 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 2700 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.002)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 3225 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 3225 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.0025)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 3750 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 3750 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.003)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 4275 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 4275 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.0035)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 4800 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 4800 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.004)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1380 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1380 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
2476 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2476 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
grestore
1.000 UL
LTb
3572 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3572 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
4668 600 M
0 63 V
0 4137 R
0 -63 V
stroke
4668 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3)]
] -66.7 MCshow
grestore
1.000 UL
LTb
5764 600 M
0 63 V
0 4137 R
0 -63 V
stroke
5764 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
6860 600 M
0 63 V
0 4137 R
0 -63 V
stroke
6860 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1380 600 M
5480 0 V
0 4200 V
-5480 0 V
0 -4200 V
LTb
200 2700 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 200.0 0.0 true true 0 (C)]
] -66.7 MCshow
grestore
grestore
LTb
4120 100 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (H)]
] -66.7 MCshow
grestore
1.000 UP
LTb
1599 4275 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (T=1.2)]
] -66.7 MLshow
grestore
1.000 UL
LT0
5477 4137 M
0 600 V
1263 0 V
0 -600 V
-1263 0 V
0 600 R
1263 0 V
1.500 UP
1.000 UL
LT0
LTb
5477 4637 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=32)]
] -66.7 MLshow
grestore
LT0
6077 4637 M
543 0 V
1380 865 M
132 -24 V
131 -9 V
132 13 V
131 8 V
132 -5 V
131 15 V
132 21 V
131 59 V
132 26 V
131 44 V
132 117 V
131 118 V
132 -3 V
131 169 V
132 228 V
131 -273 V
132 -135 V
131 -64 V
132 -118 V
131 27 V
132 -82 V
131 -30 V
132 -24 V
131 -15 V
132 -4 V
132 -37 V
131 6 V
132 -13 V
131 -4 V
132 -16 V
131 -11 V
132 -5 V
131 0 V
132 -4 V
131 -12 V
132 -4 V
131 3 V
132 -6 V
131 -7 V
132 0 V
131 -1 V
88 1 V
1380 865 Circle
1512 841 Circle
1643 832 Circle
1775 845 Circle
1906 853 Circle
2038 848 Circle
2169 863 Circle
2301 884 Circle
2432 943 Circle
2564 969 Circle
2695 1013 Circle
2827 1130 Circle
2958 1248 Circle
3090 1245 Circle
3221 1414 Circle
3353 1642 Circle
3484 1369 Circle
3616 1234 Circle
3747 1170 Circle
3879 1052 Circle
4010 1079 Circle
4142 997 Circle
4273 967 Circle
4405 943 Circle
4536 928 Circle
4668 924 Circle
4800 887 Circle
4931 893 Circle
5063 880 Circle
5194 876 Circle
5326 860 Circle
5457 849 Circle
5589 844 Circle
5720 844 Circle
5852 840 Circle
5983 828 Circle
6115 824 Circle
6246 827 Circle
6378 821 Circle
6509 814 Circle
6641 814 Circle
6772 813 Circle
6348 4637 Circle
1.500 UP
1.000 UL
LT0
LTb
5477 4437 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=24)]
] -66.7 MLshow
grestore
LT0
6077 4437 M
543 0 V
1380 982 M
132 27 V
131 -29 V
132 70 V
131 -26 V
132 80 V
131 112 V
132 346 V
131 1475 V
2564 1309 L
131 848 V
132 644 V
131 1965 V
132 -191 V
3221 3419 L
132 -748 V
131 -802 V
132 -427 V
131 -104 V
132 -76 V
131 -14 V
132 -40 V
131 -51 V
132 -13 V
131 -36 V
132 -25 V
132 -8 V
131 -20 V
132 1 V
131 -23 V
132 -7 V
131 -7 V
132 -19 V
131 6 V
132 -25 V
131 6 V
132 -6 V
131 -10 V
132 11 V
131 -9 V
132 -8 V
131 10 V
88 -3 V
1380 982 TriUF
1512 1009 TriUF
1643 980 TriUF
1775 1050 TriUF
1906 1024 TriUF
2038 1104 TriUF
2169 1216 TriUF
2301 1562 TriUF
2432 3037 TriUF
2564 1309 TriUF
2695 2157 TriUF
2827 2801 TriUF
2958 4766 TriUF
3090 4575 TriUF
3221 3419 TriUF
3353 2671 TriUF
3484 1869 TriUF
3616 1442 TriUF
3747 1338 TriUF
3879 1262 TriUF
4010 1248 TriUF
4142 1208 TriUF
4273 1157 TriUF
4405 1144 TriUF
4536 1108 TriUF
4668 1083 TriUF
4800 1075 TriUF
4931 1055 TriUF
5063 1056 TriUF
5194 1033 TriUF
5326 1026 TriUF
5457 1019 TriUF
5589 1000 TriUF
5720 1006 TriUF
5852 981 TriUF
5983 987 TriUF
6115 981 TriUF
6246 971 TriUF
6378 982 TriUF
6509 973 TriUF
6641 965 TriUF
6772 975 TriUF
6348 4437 TriUF
1.500 UP
1.000 UL
LT0
LTb
5477 4237 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=16)]
] -66.7 MLshow
grestore
LT0
6077 4237 M
543 0 V
1380 1584 M
132 85 V
131 145 V
132 124 V
131 -30 V
132 355 V
131 323 V
132 486 V
131 44 V
132 112 V
131 -130 V
132 -301 V
131 -184 V
132 -323 V
131 -32 V
132 -242 V
131 -116 V
132 -54 V
131 -104 V
132 -62 V
131 -11 V
132 -48 V
131 -28 V
132 -33 V
131 14 V
132 -62 V
132 -1 V
131 11 V
132 -52 V
1380 1584 TriD
1512 1669 TriD
1643 1814 TriD
1775 1938 TriD
1906 1908 TriD
2038 2263 TriD
2169 2586 TriD
2301 3072 TriD
2432 3116 TriD
2564 3228 TriD
2695 3098 TriD
2827 2797 TriD
2958 2613 TriD
3090 2290 TriD
3221 2258 TriD
3353 2016 TriD
3484 1900 TriD
3616 1846 TriD
3747 1742 TriD
3879 1680 TriD
4010 1669 TriD
4142 1621 TriD
4273 1593 TriD
4405 1560 TriD
4536 1574 TriD
4668 1512 TriD
4800 1511 TriD
4931 1522 TriD
5063 1470 TriD
6348 4237 TriD
1.000 UL
LTb
1380 600 M
5480 0 V
0 4200 V
-5480 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
