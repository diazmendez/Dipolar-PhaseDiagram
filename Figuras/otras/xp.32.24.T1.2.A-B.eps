%!PS-Adobe-2.0
%%Title: xp.32.24.T1.2.A-B.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri May 15 19:58:05 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1890 900 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 900 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 1320 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 1320 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.005)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 1740 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 1740 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.01)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 2160 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 2160 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.015)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 2580 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 2580 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.02)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 3000 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 3000 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.025)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 3420 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 3420 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.03)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 3840 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 3840 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.035)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 4260 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 4260 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.04)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 4680 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 4680 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.045)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2119 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2119 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 1.5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3261 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3261 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4404 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4404 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 2.5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5547 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5547 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 3)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6690 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6690 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 3.5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1890 900 M
4800 0 V
0 3780 V
-4800 0 V
0 -3780 V
LTb
300 2790 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 300.0 0.0 true true 0 (c)]
[(Symbol) 240.0 -90.0 true true 0 (h)]
] -70.0 MCshow
grestore
grestore
LTb
4290 150 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (H)]
] -100.0 MCshow
grestore
1.000 UP
LTb
5547 3840 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (T=1.2)]
] -100.0 MLshow
grestore
LTb
2347 4008 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (b\))]
] -100.0 MLshow
grestore
1.000 UL
LT0
4647 4017 M
0 600 V
1863 0 V
0 -600 V
-1863 0 V
0 600 R
1863 0 V
1.500 UP
1.000 UL
LT0
LTb
4647 4467 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (L=32)]
] -100.0 MLshow
grestore
LT0
5547 4467 M
783 0 V
1890 974 M
91 -18 V
138 -3 V
137 -10 V
137 -2 V
137 8 V
137 5 V
137 2 V
137 11 V
138 10 V
137 37 V
137 35 V
137 35 V
137 116 V
137 261 V
137 -59 V
138 306 V
137 739 V
137 -685 V
137 -338 V
137 -161 V
137 -222 V
137 59 V
4999 997 L
137 -61 V
137 -8 V
137 1 V
137 -13 V
137 -2 V
137 -4 V
138 -4 V
137 -2 V
137 -1 V
137 -1 V
137 0 V
137 -1 V
46 0 V
1981 956 Circle
2119 953 Circle
2256 943 Circle
2393 941 Circle
2530 949 Circle
2667 954 Circle
2804 956 Circle
2941 967 Circle
3079 977 Circle
3216 1014 Circle
3353 1049 Circle
3490 1084 Circle
3627 1200 Circle
3764 1461 Circle
3901 1402 Circle
4039 1708 Circle
4176 2447 Circle
4313 1762 Circle
4450 1424 Circle
4587 1263 Circle
4724 1041 Circle
4861 1100 Circle
4999 997 Circle
5136 936 Circle
5273 928 Circle
5410 929 Circle
5547 916 Circle
5684 914 Circle
5821 910 Circle
5959 906 Circle
6096 904 Circle
6233 903 Circle
6370 902 Circle
6507 902 Circle
6644 901 Circle
5938 4467 Circle
1.500 UP
1.000 UL
LT1
LTb
4647 4167 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (L=24)]
] -100.0 MLshow
grestore
LT1
5547 4167 M
783 0 V
1890 1013 M
91 16 V
138 17 V
137 27 V
137 -20 V
137 39 V
137 -18 V
137 95 V
137 117 V
138 617 V
137 21 V
137 -847 V
137 517 V
137 874 V
137 1834 V
137 -82 V
138 -842 V
137 -723 V
137 -836 V
137 -540 V
137 -141 V
137 -73 V
137 -30 V
138 -25 V
137 -48 V
137 -15 V
137 -15 V
137 -8 V
137 -6 V
137 -3 V
138 -1 V
137 -7 V
137 -2 V
137 -2 V
137 0 V
137 -2 V
46 0 V
1981 1029 TriUF
2119 1046 TriUF
2256 1073 TriUF
2393 1053 TriUF
2530 1092 TriUF
2667 1074 TriUF
2804 1169 TriUF
2941 1286 TriUF
3079 1903 TriUF
3216 1924 TriUF
3353 1077 TriUF
3490 1594 TriUF
3627 2468 TriUF
3764 4302 TriUF
3901 4220 TriUF
4039 3378 TriUF
4176 2655 TriUF
4313 1819 TriUF
4450 1279 TriUF
4587 1138 TriUF
4724 1065 TriUF
4861 1035 TriUF
4999 1010 TriUF
5136 962 TriUF
5273 947 TriUF
5410 932 TriUF
5547 924 TriUF
5684 918 TriUF
5821 915 TriUF
5959 914 TriUF
6096 907 TriUF
6233 905 TriUF
6370 903 TriUF
6507 903 TriUF
6644 901 TriUF
5938 4167 TriUF
1.000 UL
LTb
1890 900 M
4800 0 V
0 3780 V
-4800 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
