%!PS-Adobe-2.0
%%Title: c.32.24.T1.2.A-B.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Jul 24 12:52:51 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
2070 900 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 900 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 1373 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 1373 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.0005)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 1845 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 1845 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.001)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 2318 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 2318 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.0015)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 2790 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 2790 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.002)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 3263 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 3263 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.0025)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 3735 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 3735 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.003)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 4208 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 4208 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.0035)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 4680 M
63 0 V
4557 0 R
-63 0 V
stroke
1890 4680 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0.004)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2070 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2070 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 1.5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2994 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2994 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3918 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3918 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 2.5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4842 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4842 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 3)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5766 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5766 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 3.5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6690 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6690 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
2070 900 M
4620 0 V
0 3780 V
-4620 0 V
0 -3780 V
LTb
300 2790 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 300.0 0.0 true true 0 (C)]
] -100.0 MCshow
grestore
grestore
LTb
4380 150 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (H)]
] -100.0 MCshow
grestore
1.000 UP
LTb
5581 3735 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (T=1.2)]
] -100.0 MLshow
grestore
LTb
2255 3924 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (a\))]
] -100.0 MLshow
grestore
1.000 UL
LT0
4647 4017 M
0 600 V
1863 0 V
0 -600 V
-1863 0 V
0 600 R
1863 0 V
1.500 UP
1.000 UL
LT0
LTb
4647 4467 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (L=32)]
] -100.0 MLshow
grestore
LT0
5547 4467 M
783 0 V
2070 1139 M
111 -22 V
111 -8 V
111 11 V
111 8 V
110 -5 V
111 14 V
111 19 V
111 52 V
111 24 V
111 40 V
111 105 V
111 106 V
110 -3 V
111 153 V
111 204 V
111 -245 V
111 -122 V
111 -57 V
111 -106 V
111 24 V
110 -74 V
111 -26 V
111 -22 V
111 -14 V
111 -3 V
111 -34 V
111 6 V
111 -12 V
111 -4 V
110 -14 V
111 -10 V
111 -4 V
111 -1 V
111 -3 V
111 -11 V
111 -3 V
111 2 V
110 -6 V
111 -6 V
111 1 V
111 -1 V
74 0 V
2070 1139 Circle
2181 1117 Circle
2292 1109 Circle
2403 1120 Circle
2514 1128 Circle
2624 1123 Circle
2735 1137 Circle
2846 1156 Circle
2957 1208 Circle
3068 1232 Circle
3179 1272 Circle
3290 1377 Circle
3401 1483 Circle
3511 1480 Circle
3622 1633 Circle
3733 1837 Circle
3844 1592 Circle
3955 1470 Circle
4066 1413 Circle
4177 1307 Circle
4288 1331 Circle
4398 1257 Circle
4509 1231 Circle
4620 1209 Circle
4731 1195 Circle
4842 1192 Circle
4953 1158 Circle
5064 1164 Circle
5175 1152 Circle
5286 1148 Circle
5396 1134 Circle
5507 1124 Circle
5618 1120 Circle
5729 1119 Circle
5840 1116 Circle
5951 1105 Circle
6062 1102 Circle
6173 1104 Circle
6283 1098 Circle
6394 1092 Circle
6505 1093 Circle
6616 1092 Circle
5938 4467 Circle
1.500 UP
1.000 UL
LT1
LTb
4647 4167 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (L=24)]
] -100.0 MLshow
grestore
LT1
5547 4167 M
783 0 V
2070 1244 M
111 24 V
111 -26 V
111 63 V
111 -23 V
110 72 V
111 101 V
111 311 V
111 1328 V
3068 1538 L
111 763 V
111 580 V
111 1768 V
110 -172 V
3622 3437 L
111 -674 V
111 -721 V
111 -384 V
111 -94 V
111 -68 V
111 -13 V
110 -36 V
111 -46 V
111 -12 V
111 -32 V
111 -22 V
111 -7 V
111 -18 V
111 1 V
111 -21 V
110 -7 V
111 -6 V
111 -17 V
111 5 V
111 -22 V
111 5 V
111 -5 V
111 -9 V
110 10 V
111 -8 V
111 -7 V
111 8 V
74 -2 V
2070 1244 TriUF
2181 1268 TriUF
2292 1242 TriUF
2403 1305 TriUF
2514 1282 TriUF
2624 1354 TriUF
2735 1455 TriUF
2846 1766 TriUF
2957 3094 TriUF
3068 1538 TriUF
3179 2301 TriUF
3290 2881 TriUF
3401 4649 TriUF
3511 4477 TriUF
3622 3437 TriUF
3733 2763 TriUF
3844 2042 TriUF
3955 1658 TriUF
4066 1564 TriUF
4177 1496 TriUF
4288 1483 TriUF
4398 1447 TriUF
4509 1401 TriUF
4620 1389 TriUF
4731 1357 TriUF
4842 1335 TriUF
4953 1328 TriUF
5064 1310 TriUF
5175 1311 TriUF
5286 1290 TriUF
5396 1283 TriUF
5507 1277 TriUF
5618 1260 TriUF
5729 1265 TriUF
5840 1243 TriUF
5951 1248 TriUF
6062 1243 TriUF
6173 1234 TriUF
6283 1244 TriUF
6394 1236 TriUF
6505 1229 TriUF
6616 1237 TriUF
5938 4167 TriUF
1.000 UL
LTb
2070 900 M
4620 0 V
0 3780 V
-4620 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
