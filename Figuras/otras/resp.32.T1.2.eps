%!PS-Adobe-2.0
%%Title: resp.32.T1.2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sun Feb  1 10:48:37 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1020 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1020 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1440 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1440 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1860 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1860 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.3)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2280 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2280 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2700 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2700 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3120 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3120 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3540 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3540 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.7)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3960 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3960 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4380 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4380 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.9)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4800 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4800 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1020 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1993 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1993 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
grestore
1.000 UL
LTb
2967 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2967 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
grestore
1.000 UL
LTb
3940 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3940 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3)]
] -66.7 MCshow
grestore
1.000 UL
LTb
4913 600 M
0 63 V
0 4137 R
0 -63 V
stroke
4913 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
grestore
1.000 UL
LTb
5887 600 M
0 63 V
0 4137 R
0 -63 V
stroke
5887 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
6860 600 M
0 63 V
0 4137 R
0 -63 V
stroke
6860 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 6)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
LTb
200 2700 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 200.0 0.0 true true 0 (response functions)]
] -66.7 MCshow
grestore
grestore
LTb
3940 100 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (H)]
] -66.7 MCshow
grestore
1.000 UP
LTb
1263 4590 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (T=1.2)]
] -66.7 MLshow
grestore
1.000 UL
LT0
4277 4337 M
0 400 V
2463 0 V
0 -400 V
-2463 0 V
0 400 R
2463 0 V
1.500 UP
1.000 UL
LT0
LTb
4277 4637 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (C\(H\))]
] -66.7 MLshow
grestore
LT0
6077 4637 M
543 0 V
1020 783 M
58 2 V
59 8 V
58 12 V
59 12 V
58 20 V
58 21 V
59 36 V
58 46 V
59 44 V
58 50 V
58 49 V
59 103 V
58 67 V
59 39 V
58 -23 V
58 37 V
59 26 V
58 43 V
59 112 V
58 -86 V
58 150 V
59 117 V
58 247 V
59 -251 V
58 -23 V
58 -97 V
59 -35 V
58 51 V
59 32 V
58 -21 V
58 60 V
59 83 V
58 230 V
59 101 V
58 175 V
58 459 V
59 461 V
58 -12 V
59 665 V
58 892 V
58 -1069 V
59 -531 V
58 -250 V
59 -463 V
58 105 V
58 -321 V
59 -115 V
58 -96 V
59 -60 V
58 -15 V
58 -146 V
59 27 V
58 -53 V
59 -16 V
58 -61 V
58 -44 V
59 -18 V
58 -3 V
59 -16 V
58 -47 V
58 -14 V
59 12 V
58 -26 V
59 -27 V
58 2 V
58 -3 V
59 1 V
58 -29 V
59 3 V
58 4 V
58 -19 V
59 1 V
58 8 V
59 5 V
58 -13 V
58 -1 V
59 23 V
58 22 V
59 19 V
58 -7 V
58 7 V
59 27 V
58 8 V
59 -5 V
58 -27 V
58 -21 V
59 -69 V
58 -67 V
59 -72 V
58 -95 V
58 -76 V
59 -58 V
58 -58 V
59 -58 V
58 -35 V
58 -30 V
59 -35 V
58 -22 V
59 -19 V
1020 783 Circle
1078 785 Circle
1137 793 Circle
1195 805 Circle
1254 817 Circle
1312 837 Circle
1370 858 Circle
1429 894 Circle
1487 940 Circle
1546 984 Circle
1604 1034 Circle
1662 1083 Circle
1721 1186 Circle
1779 1253 Circle
1838 1292 Circle
1896 1269 Circle
1954 1306 Circle
2013 1332 Circle
2071 1375 Circle
2130 1487 Circle
2188 1401 Circle
2246 1551 Circle
2305 1668 Circle
2363 1915 Circle
2422 1664 Circle
2480 1641 Circle
2538 1544 Circle
2597 1509 Circle
2655 1560 Circle
2714 1592 Circle
2772 1571 Circle
2830 1631 Circle
2889 1714 Circle
2947 1944 Circle
3006 2045 Circle
3064 2220 Circle
3122 2679 Circle
3181 3140 Circle
3239 3128 Circle
3298 3793 Circle
3356 4685 Circle
3414 3616 Circle
3473 3085 Circle
3531 2835 Circle
3590 2372 Circle
3648 2477 Circle
3706 2156 Circle
3765 2041 Circle
3823 1945 Circle
3882 1885 Circle
3940 1870 Circle
3998 1724 Circle
4057 1751 Circle
4115 1698 Circle
4174 1682 Circle
4232 1621 Circle
4290 1577 Circle
4349 1559 Circle
4407 1556 Circle
4466 1540 Circle
4524 1493 Circle
4582 1479 Circle
4641 1491 Circle
4699 1465 Circle
4758 1438 Circle
4816 1440 Circle
4874 1437 Circle
4933 1438 Circle
4991 1409 Circle
5050 1412 Circle
5108 1416 Circle
5166 1397 Circle
5225 1398 Circle
5283 1406 Circle
5342 1411 Circle
5400 1398 Circle
5458 1397 Circle
5517 1420 Circle
5575 1442 Circle
5634 1461 Circle
5692 1454 Circle
5750 1461 Circle
5809 1488 Circle
5867 1496 Circle
5926 1491 Circle
5984 1464 Circle
6042 1443 Circle
6101 1374 Circle
6159 1307 Circle
6218 1235 Circle
6276 1140 Circle
6334 1064 Circle
6393 1006 Circle
6451 948 Circle
6510 890 Circle
6568 855 Circle
6626 825 Circle
6685 790 Circle
6743 768 Circle
6802 749 Circle
6348 4637 Circle
1.500 UP
1.000 UL
LT1
LTb
4277 4437 M
gsave 0 setgray
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Times-Roman) 200.0 0.0 true true 0 (\(H\))]
] -66.7 MLshow
grestore
LT1
6077 4437 M
543 0 V
1020 610 M
58 0 V
59 2 V
58 3 V
59 3 V
58 8 V
58 8 V
59 15 V
58 22 V
59 29 V
58 38 V
58 49 V
59 91 V
58 80 V
59 93 V
58 -348 V
58 11 V
59 30 V
58 55 V
59 93 V
58 90 V
58 182 V
59 3508 V
2363 987 L
59 -172 V
58 -29 V
58 -49 V
59 -10 V
58 -10 V
59 8 V
58 29 V
58 40 V
59 45 V
58 97 V
59 108 V
58 91 V
58 196 V
59 185 V
58 18 V
59 212 V
58 255 V
58 -382 V
59 -144 V
58 -79 V
59 -54 V
58 12 V
58 -56 V
59 -1 V
58 -17 V
59 -17 V
58 12 V
58 6 V
59 -22 V
58 0 V
59 8 V
58 -9 V
58 0 V
59 -2 V
58 11 V
59 6 V
58 -2 V
58 29 V
59 -12 V
58 -4 V
59 1 V
58 7 V
58 14 V
59 -2 V
58 9 V
59 12 V
58 0 V
58 3 V
59 2 V
58 17 V
59 -1 V
58 30 V
58 -16 V
59 0 V
58 -6 V
59 6 V
58 -12 V
58 -47 V
59 -9 V
58 -58 V
59 -69 V
58 -68 V
58 -76 V
59 -79 V
58 -74 V
59 -61 V
58 -59 V
58 -40 V
59 -26 V
58 -24 V
59 -17 V
58 -9 V
58 -8 V
59 -6 V
58 -4 V
59 -3 V
1020 610 TriU
1078 610 TriU
1137 612 TriU
1195 615 TriU
1254 618 TriU
1312 626 TriU
1370 634 TriU
1429 649 TriU
1487 671 TriU
1546 700 TriU
1604 738 TriU
1662 787 TriU
1721 878 TriU
1779 958 TriU
1838 1051 TriU
1896 703 TriU
1954 714 TriU
2013 744 TriU
2071 799 TriU
2130 892 TriU
2188 982 TriU
2246 1164 TriU
2305 4672 TriU
2363 987 TriU
2422 815 TriU
2480 786 TriU
2538 737 TriU
2597 727 TriU
2655 717 TriU
2714 725 TriU
2772 754 TriU
2830 794 TriU
2889 839 TriU
2947 936 TriU
3006 1044 TriU
3064 1135 TriU
3122 1331 TriU
3181 1516 TriU
3239 1534 TriU
3298 1746 TriU
3356 2001 TriU
3414 1619 TriU
3473 1475 TriU
3531 1396 TriU
3590 1342 TriU
3648 1354 TriU
3706 1298 TriU
3765 1297 TriU
3823 1280 TriU
3882 1263 TriU
3940 1275 TriU
3998 1281 TriU
4057 1259 TriU
4115 1259 TriU
4174 1267 TriU
4232 1258 TriU
4290 1258 TriU
4349 1256 TriU
4407 1267 TriU
4466 1273 TriU
4524 1271 TriU
4582 1300 TriU
4641 1288 TriU
4699 1284 TriU
4758 1285 TriU
4816 1292 TriU
4874 1306 TriU
4933 1304 TriU
4991 1313 TriU
5050 1325 TriU
5108 1325 TriU
5166 1328 TriU
5225 1330 TriU
5283 1347 TriU
5342 1346 TriU
5400 1376 TriU
5458 1360 TriU
5517 1360 TriU
5575 1354 TriU
5634 1360 TriU
5692 1348 TriU
5750 1301 TriU
5809 1292 TriU
5867 1234 TriU
5926 1165 TriU
5984 1097 TriU
6042 1021 TriU
6101 942 TriU
6159 868 TriU
6218 807 TriU
6276 748 TriU
6334 708 TriU
6393 682 TriU
6451 658 TriU
6510 641 TriU
6568 632 TriU
6626 624 TriU
6685 618 TriU
6743 614 TriU
6802 611 TriU
6348 4437 TriU
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
