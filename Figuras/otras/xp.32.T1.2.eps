%!PS-Adobe-2.0
%%Title: xp.32.T1.2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Jan  1 10:12:35 1988
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
1.000 UL
LTb
1512 720 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 720 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 1123 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 1123 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.002)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 1526 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 1526 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.004)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 1930 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 1930 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.006)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 2333 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 2333 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.008)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 2736 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 2736 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.01)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 3139 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 3139 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.012)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 3542 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 3542 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.014)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 3946 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 3946 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.016)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 4349 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 4349 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.018)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 4752 M
63 0 V
5217 0 R
-63 0 V
stroke
1368 4752 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.02)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1512 720 M
0 63 V
0 3969 R
0 -63 V
stroke
1512 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
grestore
1.000 UL
LTb
2392 720 M
0 63 V
0 3969 R
0 -63 V
stroke
2392 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
grestore
1.000 UL
LTb
3272 720 M
0 63 V
0 3969 R
0 -63 V
stroke
3272 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4152 720 M
0 63 V
0 3969 R
0 -63 V
stroke
4152 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
grestore
1.000 UL
LTb
5032 720 M
0 63 V
0 3969 R
0 -63 V
stroke
5032 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
grestore
1.000 UL
LTb
5912 720 M
0 63 V
0 3969 R
0 -63 V
stroke
5912 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
grestore
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
stroke
6792 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1512 720 M
5280 0 V
0 4032 V
-5280 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 300.0 0.0 true true 0 (c)]
[(Symbol) 240.0 -90.0 true true 0 (h)]
] -70.0 MCshow
grestore
grestore
LTb
4152 120 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (H)]
] -100.0 MCshow
grestore
1.000 UP
LTb
5912 4349 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (T=1.2)]
] -100.0 MLshow
grestore
LTb
1952 3139 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (c\))]
] -100.0 MLshow
grestore
1.500 UP
1.000 UL
LT0
1512 724 M
53 0 V
53 1 V
52 1 V
53 0 V
53 3 V
53 2 V
53 4 V
52 6 V
53 8 V
53 10 V
53 12 V
53 34 V
52 24 V
53 24 V
53 -62 V
53 14 V
53 12 V
52 33 V
53 42 V
53 5 V
53 117 V
53 200 V
52 -295 V
53 -65 V
53 -6 V
53 -25 V
53 -4 V
52 19 V
53 11 V
53 5 V
53 26 V
53 25 V
52 88 V
53 84 V
53 85 V
53 278 V
53 627 V
52 -143 V
53 736 V
53 1772 V
53 -1642 V
53 -811 V
52 -387 V
53 -534 V
53 141 V
53 -245 V
53 -148 V
52 -18 V
53 0 V
53 -29 V
53 -5 V
53 -11 V
52 -8 V
53 -5 V
53 -3 V
53 -1 V
53 -2 V
52 -1 V
53 -1 V
53 -1 V
53 0 V
53 -1 V
52 0 V
53 0 V
53 0 V
53 0 V
53 0 V
52 0 V
53 0 V
53 0 V
53 0 V
53 0 V
52 0 V
53 0 V
53 0 V
53 0 V
53 0 V
52 0 V
53 0 V
53 0 V
53 0 V
53 0 V
52 0 V
53 0 V
53 0 V
53 0 V
53 0 V
52 0 V
53 0 V
53 0 V
53 0 V
53 0 V
52 0 V
53 0 V
53 0 V
53 0 V
53 0 V
52 0 V
53 0 V
1512 724 Circle
1565 724 Circle
1618 725 Circle
1670 726 Circle
1723 726 Circle
1776 729 Circle
1829 731 Circle
1882 735 Circle
1934 741 Circle
1987 749 Circle
2040 759 Circle
2093 771 Circle
2146 805 Circle
2198 829 Circle
2251 853 Circle
2304 791 Circle
2357 805 Circle
2410 817 Circle
2462 850 Circle
2515 892 Circle
2568 897 Circle
2621 1014 Circle
2674 1214 Circle
2726 919 Circle
2779 854 Circle
2832 848 Circle
2885 823 Circle
2938 819 Circle
2990 838 Circle
3043 849 Circle
3096 854 Circle
3149 880 Circle
3202 905 Circle
3254 993 Circle
3307 1077 Circle
3360 1162 Circle
3413 1440 Circle
3466 2067 Circle
3518 1924 Circle
3571 2660 Circle
3624 4432 Circle
3677 2790 Circle
3730 1979 Circle
3782 1592 Circle
3835 1058 Circle
3888 1199 Circle
3941 954 Circle
3994 806 Circle
4046 788 Circle
4099 788 Circle
4152 759 Circle
4205 754 Circle
4258 743 Circle
4310 735 Circle
4363 730 Circle
4416 727 Circle
4469 726 Circle
4522 724 Circle
4574 723 Circle
4627 722 Circle
4680 721 Circle
4733 721 Circle
4786 720 Circle
4838 720 Circle
4891 720 Circle
4944 720 Circle
4997 720 Circle
5050 720 Circle
5102 720 Circle
5155 720 Circle
5208 720 Circle
5261 720 Circle
5314 720 Circle
5366 720 Circle
5419 720 Circle
5472 720 Circle
5525 720 Circle
5578 720 Circle
5630 720 Circle
5683 720 Circle
5736 720 Circle
5789 720 Circle
5842 720 Circle
5894 720 Circle
5947 720 Circle
6000 720 Circle
6053 720 Circle
6106 720 Circle
6158 720 Circle
6211 720 Circle
6264 720 Circle
6317 720 Circle
6370 720 Circle
6422 720 Circle
6475 720 Circle
6528 720 Circle
6581 720 Circle
6634 720 Circle
6686 720 Circle
6739 720 Circle
1.000 UL
LTb
1512 720 M
5280 0 V
0 4032 V
-5280 0 V
0 -4032 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
