%!PS-Adobe-2.0
%%Title: p.32.24.16.T1.2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Feb 12 11:04:16 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1020 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1020 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1440 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1440 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1860 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1860 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.3)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2280 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2280 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2700 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2700 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3120 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3120 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3540 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3540 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.7)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3960 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3960 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4380 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4380 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.9)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4800 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4800 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1020 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1750 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1750 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
2480 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2480 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
grestore
1.000 UL
LTb
3210 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3210 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
3940 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3940 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
grestore
1.000 UL
LTb
4670 600 M
0 63 V
0 4137 R
0 -63 V
stroke
4670 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
5400 600 M
0 63 V
0 4137 R
0 -63 V
stroke
5400 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3)]
] -66.7 MCshow
grestore
1.000 UL
LTb
6130 600 M
0 63 V
0 4137 R
0 -63 V
stroke
6130 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3.5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
6860 600 M
0 63 V
0 4137 R
0 -63 V
stroke
6860 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
LTb
200 2700 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (h)]
] -66.7 MCshow
grestore
grestore
LTb
3940 100 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (H)]
] -66.7 MCshow
grestore
1.000 UP
LTb
6130 3540 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (T=1.2)]
] -66.7 MLshow
grestore
1.000 UL
LT0
5477 4137 M
0 600 V
1263 0 V
0 -600 V
-1263 0 V
0 600 R
1263 0 V
1.500 UP
1.000 UL
LT0
LTb
5477 4637 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=32)]
] -66.7 MLshow
grestore
LT0
6077 4637 M
543 0 V
1020 4788 M
88 0 V
87 -2 V
88 -1 V
87 -2 V
88 -4 V
88 -4 V
87 -7 V
88 -9 V
87 -14 V
88 -18 V
88 -25 V
87 -45 V
88 -47 V
87 -63 V
88 -335 V
88 -14 V
87 -20 V
88 -34 V
87 -39 V
88 -40 V
88 -83 V
87 -221 V
88 -153 V
87 29 V
88 14 V
88 8 V
87 1 V
88 -3 V
87 -14 V
88 -16 V
88 -21 V
87 -43 V
88 -53 V
87 -89 V
88 -125 V
88 -153 V
87 -233 V
88 -162 V
87 -353 V
88 -552 V
88 -520 V
87 -305 V
88 -76 V
87 -141 V
88 13 V
88 -64 V
87 -56 V
88 -11 V
87 -9 V
88 -21 V
88 -12 V
87 -7 V
88 -10 V
87 -5 V
88 -5 V
88 -3 V
87 -3 V
88 -2 V
87 -2 V
88 -1 V
88 -1 V
87 -1 V
88 0 V
87 -1 V
88 0 V
88 0 V
58 0 V
1020 4788 Circle
1108 4788 Circle
1195 4786 Circle
1283 4785 Circle
1370 4783 Circle
1458 4779 Circle
1546 4775 Circle
1633 4768 Circle
1721 4759 Circle
1808 4745 Circle
1896 4727 Circle
1984 4702 Circle
2071 4657 Circle
2159 4610 Circle
2246 4547 Circle
2334 4212 Circle
2422 4198 Circle
2509 4178 Circle
2597 4144 Circle
2684 4105 Circle
2772 4065 Circle
2860 3982 Circle
2947 3761 Circle
3035 3608 Circle
3122 3637 Circle
3210 3651 Circle
3298 3659 Circle
3385 3660 Circle
3473 3657 Circle
3560 3643 Circle
3648 3627 Circle
3736 3606 Circle
3823 3563 Circle
3911 3510 Circle
3998 3421 Circle
4086 3296 Circle
4174 3143 Circle
4261 2910 Circle
4349 2748 Circle
4436 2395 Circle
4524 1843 Circle
4612 1323 Circle
4699 1018 Circle
4787 942 Circle
4874 801 Circle
4962 814 Circle
5050 750 Circle
5137 694 Circle
5225 683 Circle
5312 674 Circle
5400 653 Circle
5488 641 Circle
5575 634 Circle
5663 624 Circle
5750 619 Circle
5838 614 Circle
5926 611 Circle
6013 608 Circle
6101 606 Circle
6188 604 Circle
6276 603 Circle
6364 602 Circle
6451 601 Circle
6539 601 Circle
6626 600 Circle
6714 600 Circle
6802 600 Circle
6348 4637 Circle
1.500 UP
1.000 UL
LT0
LTb
5477 4437 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=24)]
] -66.7 MLshow
grestore
LT0
6077 4437 M
543 0 V
1020 4787 M
88 -1 V
87 1 V
88 -2 V
87 -3 V
88 -4 V
88 -4 V
87 -8 V
88 -11 V
87 -12 V
88 -29 V
88 -25 V
87 -40 V
88 -578 V
87 2 V
88 -3 V
88 -2 V
87 -5 V
88 -8 V
87 -9 V
88 -19 V
88 -22 V
87 -22 V
88 -59 V
87 -55 V
88 -66 V
88 -91 V
87 -82 V
88 -109 V
87 -83 V
88 -113 V
88 -191 V
87 -233 V
88 95 V
87 266 V
88 -168 V
88 -160 V
87 -884 V
88 -26 V
87 -321 V
88 -379 V
88 -239 V
87 -162 V
88 -73 V
87 -48 V
88 -29 V
88 -29 V
87 -32 V
88 -21 V
87 -21 V
88 -15 V
88 -11 V
87 -7 V
88 -7 V
87 -11 V
88 -4 V
88 -5 V
87 -2 V
88 -3 V
87 -1 V
88 -1 V
88 -1 V
87 -1 V
88 0 V
87 0 V
88 -1 V
88 0 V
58 0 V
1020 4787 TriUF
1108 4786 TriUF
1195 4787 TriUF
1283 4785 TriUF
1370 4782 TriUF
1458 4778 TriUF
1546 4774 TriUF
1633 4766 TriUF
1721 4755 TriUF
1808 4743 TriUF
1896 4714 TriUF
1984 4689 TriUF
2071 4649 TriUF
2159 4071 TriUF
2246 4073 TriUF
2334 4070 TriUF
2422 4068 TriUF
2509 4063 TriUF
2597 4055 TriUF
2684 4046 TriUF
2772 4027 TriUF
2860 4005 TriUF
2947 3983 TriUF
3035 3924 TriUF
3122 3869 TriUF
3210 3803 TriUF
3298 3712 TriUF
3385 3630 TriUF
3473 3521 TriUF
3560 3438 TriUF
3648 3325 TriUF
3736 3134 TriUF
3823 2901 TriUF
3911 2996 TriUF
3998 3262 TriUF
4086 3094 TriUF
4174 2934 TriUF
4261 2050 TriUF
4349 2024 TriUF
4436 1703 TriUF
4524 1324 TriUF
4612 1085 TriUF
4699 923 TriUF
4787 850 TriUF
4874 802 TriUF
4962 773 TriUF
5050 744 TriUF
5137 712 TriUF
5225 691 TriUF
5312 670 TriUF
5400 655 TriUF
5488 644 TriUF
5575 637 TriUF
5663 630 TriUF
5750 619 TriUF
5838 615 TriUF
5926 610 TriUF
6013 608 TriUF
6101 605 TriUF
6188 604 TriUF
6276 603 TriUF
6364 602 TriUF
6451 601 TriUF
6539 601 TriUF
6626 601 TriUF
6714 600 TriUF
6802 600 TriUF
6348 4437 TriUF
1.500 UP
1.000 UL
LT0
LTb
5477 4237 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (L=16)]
] -66.7 MLshow
grestore
LT0
6077 4237 M
543 0 V
1020 4784 M
88 0 V
87 1 V
88 -3 V
87 -4 V
88 -3 V
88 -9 V
87 -12 V
88 -14 V
87 -27 V
88 -31 V
88 -52 V
87 -66 V
88 -811 V
87 -25 V
88 -29 V
88 3 V
87 2 V
88 -2 V
87 3 V
88 2 V
88 -11 V
87 -6 V
88 1 V
87 -19 V
88 -26 V
88 -41 V
87 -40 V
88 -63 V
87 -62 V
88 -165 V
88 -188 V
87 -275 V
88 -324 V
87 -225 V
88 -251 V
88 -432 V
87 -160 V
88 -236 V
87 -82 V
88 -102 V
88 -116 V
87 -43 V
88 -44 V
87 -38 V
88 -32 V
88 -19 V
87 -27 V
88 -21 V
87 -10 V
88 -11 V
88 -13 V
87 -7 V
88 -4 V
1020 4784 TriD
1108 4784 TriD
1195 4785 TriD
1283 4782 TriD
1370 4778 TriD
1458 4775 TriD
1546 4766 TriD
1633 4754 TriD
1721 4740 TriD
1808 4713 TriD
1896 4682 TriD
1984 4630 TriD
2071 4564 TriD
2159 3753 TriD
2246 3728 TriD
2334 3699 TriD
2422 3702 TriD
2509 3704 TriD
2597 3702 TriD
2684 3705 TriD
2772 3707 TriD
2860 3696 TriD
2947 3690 TriD
3035 3691 TriD
3122 3672 TriD
3210 3646 TriD
3298 3605 TriD
3385 3565 TriD
3473 3502 TriD
3560 3440 TriD
3648 3275 TriD
3736 3087 TriD
3823 2812 TriD
3911 2488 TriD
3998 2263 TriD
4086 2012 TriD
4174 1580 TriD
4261 1420 TriD
4349 1184 TriD
4436 1102 TriD
4524 1000 TriD
4612 884 TriD
4699 841 TriD
4787 797 TriD
4874 759 TriD
4962 727 TriD
5050 708 TriD
5137 681 TriD
5225 660 TriD
5312 650 TriD
5400 639 TriD
5488 626 TriD
5575 619 TriD
5663 615 TriD
6348 4237 TriD
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
