%!PS-Adobe-2.0
%%Title: pm.32.T1.2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Jan  1 10:08:22 1988
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 720 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 1123 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 1123 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.1)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 1526 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 1526 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 1930 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 1930 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.3)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 2333 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 2333 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 2736 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 2736 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 3139 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 3139 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 3542 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 3542 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.7)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 3946 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 3946 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 4349 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 4349 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.9)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 4752 M
63 0 V
5433 0 R
-63 0 V
stroke
1080 4752 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
stroke
1224 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
grestore
1.000 UL
LTb
2140 720 M
0 63 V
0 3969 R
0 -63 V
stroke
2140 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
grestore
1.000 UL
LTb
3056 720 M
0 63 V
0 3969 R
0 -63 V
stroke
3056 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
grestore
1.000 UL
LTb
3972 720 M
0 63 V
0 3969 R
0 -63 V
stroke
3972 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4888 720 M
0 63 V
0 3969 R
0 -63 V
stroke
4888 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
grestore
1.000 UL
LTb
5804 720 M
0 63 V
0 3969 R
0 -63 V
stroke
5804 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
grestore
1.000 UL
LTb
6720 720 M
0 63 V
0 3969 R
0 -63 V
stroke
6720 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1224 720 M
5496 0 V
0 4032 V
-5496 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 300.0 0.0 true true 0 (h)]
] -100.0 MCshow
grestore
grestore
LTb
6959 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 300.0 0.0 true true 0 (m)]
] -100.0 MCshow
grestore
grestore
LTb
3972 120 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (H)]
] -100.0 MCshow
grestore
1.000 UP
LTb
3743 4470 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 (T=1.2)]
] -80.0 MLshow
grestore
LTb
1774 2736 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (a\))]
] -100.0 MLshow
grestore
1.000 UL
LT0
1528 3776 M
-121 -32 V
121 -32 V
612 32 R
-733 0 V
1.000 UL
LT0
6141 3712 M
121 32 V
-121 32 V
-612 -32 R
733 0 V
1.000 UL
LT0
5649 783 M
927 0 V
-927 0 V
927 0 V
1.500 UP
1.000 UL
LT0
1224 4740 M
55 0 V
55 -1 V
55 -1 V
55 -2 V
55 -4 V
55 -4 V
55 -7 V
55 -8 V
55 -14 V
55 -17 V
55 -24 V
55 -43 V
54 -45 V
55 -61 V
55 -322 V
55 -13 V
55 -19 V
55 -33 V
55 -37 V
55 -39 V
55 -79 V
55 -212 V
55 -147 V
55 28 V
55 13 V
55 8 V
55 1 V
55 -3 V
55 -13 V
55 -16 V
55 -21 V
55 -40 V
55 -51 V
55 -86 V
55 -120 V
55 -146 V
55 -224 V
54 -156 V
55 -339 V
55 -529 V
55 -500 V
55 -293 V
55 -73 V
55 -135 V
55 13 V
55 -62 V
55 -53 V
55 -11 V
55 -9 V
55 -20 V
55 -12 V
55 -7 V
55 -9 V
55 -5 V
55 -5 V
55 -2 V
55 -3 V
55 -2 V
55 -2 V
55 -1 V
55 -1 V
55 -1 V
54 0 V
55 -1 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
54 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
55 0 V
1224 4740 Box
1279 4740 Box
1334 4739 Box
1389 4738 Box
1444 4736 Box
1499 4732 Box
1554 4728 Box
1609 4721 Box
1664 4713 Box
1719 4699 Box
1774 4682 Box
1829 4658 Box
1884 4615 Box
1938 4570 Box
1993 4509 Box
2048 4187 Box
2103 4174 Box
2158 4155 Box
2213 4122 Box
2268 4085 Box
2323 4046 Box
2378 3967 Box
2433 3755 Box
2488 3608 Box
2543 3636 Box
2598 3649 Box
2653 3657 Box
2708 3658 Box
2763 3655 Box
2818 3642 Box
2873 3626 Box
2928 3605 Box
2983 3565 Box
3038 3514 Box
3093 3428 Box
3148 3308 Box
3203 3162 Box
3258 2938 Box
3312 2782 Box
3367 2443 Box
3422 1914 Box
3477 1414 Box
3532 1121 Box
3587 1048 Box
3642 913 Box
3697 926 Box
3752 864 Box
3807 811 Box
3862 800 Box
3917 791 Box
3972 771 Box
4027 759 Box
4082 752 Box
4137 743 Box
4192 738 Box
4247 733 Box
4302 731 Box
4357 728 Box
4412 726 Box
4467 724 Box
4522 723 Box
4577 722 Box
4632 721 Box
4686 721 Box
4741 720 Box
4796 720 Box
4851 720 Box
4906 720 Box
4961 720 Box
5016 720 Box
5071 720 Box
5126 720 Box
5181 720 Box
5236 720 Box
5291 720 Box
5346 720 Box
5401 720 Box
5456 720 Box
5511 720 Box
5566 720 Box
5621 720 Box
5676 720 Box
5731 720 Box
5786 720 Box
5841 720 Box
5896 720 Box
5951 720 Box
6006 720 Box
6060 720 Box
6115 720 Box
6170 720 Box
6225 720 Box
6280 720 Box
6335 720 Box
6390 720 Box
6445 720 Box
6500 720 Box
6555 720 Box
6610 720 Box
6665 720 Box
1.500 UP
1.000 UL
LT1
1224 725 M
55 0 V
55 0 V
55 1 V
55 1 V
55 2 V
55 1 V
55 4 V
55 4 V
55 6 V
55 9 V
55 12 V
55 19 V
54 22 V
55 29 V
55 383 V
55 8 V
55 12 V
55 14 V
55 17 V
55 22 V
55 37 V
55 161 V
55 168 V
55 25 V
55 14 V
55 12 V
55 9 V
55 9 V
55 9 V
55 10 V
55 12 V
55 15 V
55 22 V
55 28 V
55 41 V
55 47 V
55 59 V
54 56 V
55 84 V
55 93 V
55 96 V
55 80 V
55 57 V
55 60 V
55 46 V
55 55 V
55 55 V
55 49 V
55 51 V
55 51 V
55 47 V
55 49 V
55 51 V
55 48 V
55 50 V
55 49 V
55 48 V
55 52 V
55 49 V
55 48 V
55 50 V
55 50 V
54 50 V
55 55 V
55 48 V
55 52 V
55 50 V
55 53 V
55 51 V
55 56 V
55 51 V
55 56 V
55 56 V
55 56 V
55 53 V
55 57 V
55 57 V
55 56 V
55 54 V
55 57 V
55 55 V
55 49 V
55 51 V
55 42 V
55 42 V
55 35 V
55 28 V
54 21 V
55 17 V
55 14 V
55 8 V
55 8 V
55 5 V
55 3 V
55 3 V
55 2 V
55 2 V
55 1 V
55 0 V
1224 725 Dia
1279 725 Dia
1334 725 Dia
1389 726 Dia
1444 727 Dia
1499 729 Dia
1554 730 Dia
1609 734 Dia
1664 738 Dia
1719 744 Dia
1774 753 Dia
1829 765 Dia
1884 784 Dia
1938 806 Dia
1993 835 Dia
2048 1218 Dia
2103 1226 Dia
2158 1238 Dia
2213 1252 Dia
2268 1269 Dia
2323 1291 Dia
2378 1328 Dia
2433 1489 Dia
2488 1657 Dia
2543 1682 Dia
2598 1696 Dia
2653 1708 Dia
2708 1717 Dia
2763 1726 Dia
2818 1735 Dia
2873 1745 Dia
2928 1757 Dia
2983 1772 Dia
3038 1794 Dia
3093 1822 Dia
3148 1863 Dia
3203 1910 Dia
3258 1969 Dia
3312 2025 Dia
3367 2109 Dia
3422 2202 Dia
3477 2298 Dia
3532 2378 Dia
3587 2435 Dia
3642 2495 Dia
3697 2541 Dia
3752 2596 Dia
3807 2651 Dia
3862 2700 Dia
3917 2751 Dia
3972 2802 Dia
4027 2849 Dia
4082 2898 Dia
4137 2949 Dia
4192 2997 Dia
4247 3047 Dia
4302 3096 Dia
4357 3144 Dia
4412 3196 Dia
4467 3245 Dia
4522 3293 Dia
4577 3343 Dia
4632 3393 Dia
4686 3443 Dia
4741 3498 Dia
4796 3546 Dia
4851 3598 Dia
4906 3648 Dia
4961 3701 Dia
5016 3752 Dia
5071 3808 Dia
5126 3859 Dia
5181 3915 Dia
5236 3971 Dia
5291 4027 Dia
5346 4080 Dia
5401 4137 Dia
5456 4194 Dia
5511 4250 Dia
5566 4304 Dia
5621 4361 Dia
5676 4416 Dia
5731 4465 Dia
5786 4516 Dia
5841 4558 Dia
5896 4600 Dia
5951 4635 Dia
6006 4663 Dia
6060 4684 Dia
6115 4701 Dia
6170 4715 Dia
6225 4723 Dia
6280 4731 Dia
6335 4736 Dia
6390 4739 Dia
6445 4742 Dia
6500 4744 Dia
6555 4746 Dia
6610 4747 Dia
6665 4747 Dia
1.000 UL
LTb
1224 720 M
5496 0 V
0 4032 V
-5496 0 V
0 -4032 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
