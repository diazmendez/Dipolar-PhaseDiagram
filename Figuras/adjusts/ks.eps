%!PS-Adobe-2.0
%%Title: ks.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Jan  1 00:41:27 1988
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 720 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 1224 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 1224 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 1728 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 1728 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 2232 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 2232 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 2736 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 2736 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 3240 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 3240 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 3744 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 3744 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1.2)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 4248 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 4248 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1.4)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 4752 M
63 0 V
3345 0 R
-63 0 V
stroke
1080 4752 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1.6)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
stroke
1224 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1792 720 M
0 63 V
0 3969 R
0 -63 V
stroke
1792 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
grestore
1.000 UL
LTb
2360 720 M
0 63 V
0 3969 R
0 -63 V
stroke
2360 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
grestore
1.000 UL
LTb
2928 720 M
0 63 V
0 3969 R
0 -63 V
stroke
2928 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
grestore
1.000 UL
LTb
3496 720 M
0 63 V
0 3969 R
0 -63 V
stroke
3496 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4064 720 M
0 63 V
0 3969 R
0 -63 V
stroke
4064 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4632 720 M
0 63 V
0 3969 R
0 -63 V
stroke
4632 480 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4632 3744 M
-63 0 V
stroke
4776 3744 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 (3)]
[(Symbol) 240.0 0.0 true true 0 (p)]
[(Times-Roman) 240.0 0.0 true true 0 (/8)]
] -80.0 MLshow
grestore
1.000 UL
LTb
4632 4248 M
-63 0 V
stroke
4776 4248 M
gsave 0 setgray
[ [(Times-Roman) 240.0 0.0 true true 0 (7)]
[(Symbol) 240.0 0.0 true true 0 (p)]
[(Times-Roman) 240.0 0.0 true true 0 (/16)]
] -80.0 MLshow
grestore
1.000 UL
LTb
4632 4752 M
-63 0 V
stroke
4776 4752 M
gsave 0 setgray
[ [(Symbol) 240.0 0.0 true true 0 (p)]
[(Times-Roman) 240.0 0.0 true true 0 ( /2)]
] -80.0 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1224 720 M
3408 0 V
0 4032 V
-3408 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 300.0 0.0 true true 0 (best fit of k)]
] -100.0 MCshow
grestore
grestore
LTb
2928 120 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (H)]
] -100.0 MCshow
grestore
1.000 UP
2.000 UP
1.000 UL
LT0
1224 4678 M
34 0 V
34 0 V
34 0 V
34 0 V
34 0 V
34 0 V
35 0 V
34 0 V
34 0 V
34 0 V
34 0 V
34 0 V
34 0 V
34 0 V
34 -498 V
34 -1 V
34 3 V
34 3 V
35 -4 V
34 3 V
34 -7 V
34 0 V
34 -504 V
34 -2 V
34 0 V
34 1 V
34 0 V
34 0 V
34 -2 V
34 2 V
34 1 V
35 0 V
34 -2 V
34 0 V
34 6 V
34 1 V
34 -144 V
34 0 V
34 150 V
34 0 V
34 -29 V
34 -4 V
34 -12 V
35 -34 V
34 -100 V
34 -18 V
34 19 V
34 -95 V
34 -10 V
34 -10 V
34 20 V
34 -69 V
34 0 V
34 22 V
34 1 V
34 -50 V
35 22 V
34 -26 V
34 -30 V
34 -35 V
34 -23 V
34 -29 V
34 -44 V
34 -239 V
34 245 V
34 -66 V
34 -123 V
34 -11 V
35 49 V
34 -195 V
34 100 V
34 -78 V
34 -456 V
34 340 V
34 -144 V
34 -1033 V
34 880 V
34 -1148 V
34 -109 V
34 -125 V
34 34 V
35 -152 V
34 -39 V
34 -43 V
34 -117 V
34 0 V
34 2 V
34 -1 V
34 -1 V
34 0 V
34 1 V
34 -1 V
34 0 V
35 0 V
34 0 V
34 2 V
34 -2 V
34 0 V
34 3 V
1224 4678 Box
1258 4678 Box
1292 4678 Box
1326 4678 Box
1360 4678 Box
1394 4678 Box
1428 4678 Box
1463 4678 Box
1497 4678 Box
1531 4678 Box
1565 4678 Box
1599 4678 Box
1633 4678 Box
1667 4678 Box
1701 4678 Box
1735 4180 Box
1769 4179 Box
1803 4182 Box
1837 4185 Box
1872 4181 Box
1906 4184 Box
1940 4177 Box
1974 4177 Box
2008 3673 Box
2042 3671 Box
2076 3671 Box
2110 3672 Box
2144 3672 Box
2178 3672 Box
2212 3670 Box
2246 3672 Box
2280 3673 Box
2315 3673 Box
2349 3671 Box
2383 3671 Box
2417 3677 Box
2451 3678 Box
2485 3534 Box
2519 3534 Box
2553 3684 Box
2587 3684 Box
2621 3655 Box
2655 3651 Box
2689 3639 Box
2724 3605 Box
2758 3505 Box
2792 3487 Box
2826 3506 Box
2860 3411 Box
2894 3401 Box
2928 3391 Box
2962 3411 Box
2996 3342 Box
3030 3342 Box
3064 3364 Box
3098 3365 Box
3132 3315 Box
3167 3337 Box
3201 3311 Box
3235 3281 Box
3269 3246 Box
3303 3223 Box
3337 3194 Box
3371 3150 Box
3405 2911 Box
3439 3156 Box
3473 3090 Box
3507 2967 Box
3541 2956 Box
3576 3005 Box
3610 2810 Box
3644 2910 Box
3678 2832 Box
3712 2376 Box
3746 2716 Box
3780 2572 Box
3814 1539 Box
3848 2419 Box
3882 1271 Box
3916 1162 Box
3950 1037 Box
3984 1071 Box
4019 919 Box
4053 880 Box
4087 837 Box
4121 720 Box
4155 720 Box
4189 722 Box
4223 721 Box
4257 720 Box
4291 720 Box
4325 721 Box
4359 720 Box
4393 720 Box
4428 720 Box
4462 720 Box
4496 722 Box
4530 720 Box
4564 720 Box
4598 723 Box
1.000 UL
LT1
1224 4678 M
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
1.000 UL
LT1
1224 4184 M
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
1.000 UL
LT1
1224 3689 M
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
35 0 V
34 0 V
1.000 UL
LTb
1224 720 M
3408 0 V
0 4032 V
-3408 0 V
0 -4032 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
