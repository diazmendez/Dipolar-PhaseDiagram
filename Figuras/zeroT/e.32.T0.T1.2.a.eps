%!PS-Adobe-2.0
%%Title: e.32.T0.T1.2.a.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri May 15 19:06:28 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1530 900 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 900 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-6)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 1350 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 1350 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-5.5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 1800 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 1800 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 2250 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 2250 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-4.5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 2700 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 2700 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-4)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 3150 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 3150 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-3.5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 3600 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 3600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-3)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 4050 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 4050 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-2.5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 4500 M
63 0 V
5097 0 R
-63 0 V
stroke
1350 4500 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (-2)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1530 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1530 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2390 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2390 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 1)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3250 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3250 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4110 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4110 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 3)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4970 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4970 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5830 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5830 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6690 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6690 600 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 ( 6)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1530 900 M
5160 0 V
0 3780 V
-5160 0 V
0 -3780 V
LTb
300 2790 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 300.0 0.0 true true 0 (energy)]
] -100.0 MCshow
grestore
grestore
LTb
4110 150 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (H)]
] -100.0 MCshow
grestore
1.000 UP
LTb
1960 1170 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (b\))]
] -100.0 MLshow
grestore
1.000 UL
LT0
3387 4017 M
0 600 V
3123 0 V
0 -600 V
-3123 0 V
0 600 R
3123 0 V
1.000 UL
LT0
LTb
3387 4467 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (T=0 stripes)]
] -100.0 MLshow
grestore
LT0
5547 4467 M
783 0 V
1530 4125 M
52 0 V
51 0 V
52 0 V
51 0 V
52 0 V
52 0 V
51 0 V
52 0 V
51 0 V
52 0 V
52 -5 V
51 -7 V
52 -7 V
51 -6 V
52 -7 V
52 -7 V
51 -7 V
52 -6 V
51 -7 V
52 -7 V
52 -7 V
51 -6 V
52 -7 V
51 -9 V
52 -14 V
52 -13 V
51 -14 V
52 -13 V
51 -14 V
52 -13 V
52 -14 V
51 -13 V
52 -14 V
51 -13 V
52 -14 V
52 -13 V
51 -14 V
52 -13 V
51 -19 V
52 -20 V
52 -20 V
51 -21 V
52 -20 V
51 -20 V
52 -20 V
52 -21 V
51 -20 V
52 -20 V
51 -20 V
52 -21 V
52 -25 V
51 -27 V
52 -27 V
51 -27 V
52 -27 V
52 -27 V
51 -27 V
52 -27 V
51 -27 V
52 -27 V
52 -27 V
51 -27 V
52 -27 V
51 -27 V
52 -38 V
52 -41 V
51 -40 V
52 -43 V
51 -54 V
52 -54 V
52 -54 V
51 -54 V
52 -54 V
51 -54 V
52 -54 V
52 -54 V
51 -54 V
52 -54 V
51 -54 V
52 -54 V
52 -54 V
51 -54 V
52 -54 V
51 -54 V
52 -54 V
52 -54 V
51 -54 V
52 -54 V
51 -54 V
52 -54 V
52 -54 V
51 -54 V
52 -54 V
51 -54 V
52 -54 V
52 -54 V
51 -54 V
52 -54 V
51 -54 V
52 -54 V
1.000 UP
1.000 UL
LT1
LTb
3387 4167 M
gsave 0 setgray
[ [(Times-Roman) 300.0 0.0 true true 0 (T=1.2)]
] -100.0 MLshow
grestore
LT1
5547 4167 M
783 0 V
1530 4129 M
52 0 V
51 0 V
52 1 V
51 0 V
52 1 V
52 0 V
51 2 V
52 1 V
51 2 V
52 2 V
52 3 V
51 3 V
52 4 V
51 5 V
52 -43 V
52 -6 V
51 -5 V
52 -5 V
51 -4 V
52 -5 V
52 -3 V
51 -3 V
52 -14 V
51 -19 V
52 -17 V
52 -15 V
51 -15 V
52 -14 V
51 -13 V
52 -13 V
52 -12 V
51 -10 V
52 -9 V
51 -8 V
52 -5 V
52 -5 V
51 -3 V
52 -6 V
51 0 V
52 5 V
52 4 V
51 -8 V
52 -16 V
51 -17 V
52 -23 V
52 -22 V
51 -21 V
52 -25 V
51 -26 V
52 -26 V
52 -28 V
51 -29 V
52 -29 V
51 -31 V
52 -32 V
52 -33 V
51 -33 V
52 -34 V
51 -35 V
52 -37 V
52 -36 V
51 -39 V
52 -38 V
51 -40 V
52 -41 V
52 -41 V
51 -43 V
52 -43 V
51 -45 V
52 -45 V
52 -46 V
51 -48 V
52 -49 V
51 -49 V
52 -51 V
52 -52 V
51 -53 V
52 -54 V
51 -55 V
52 -57 V
52 -58 V
51 -58 V
52 -60 V
51 -60 V
52 -60 V
52 -60 V
51 -60 V
52 -59 V
51 -58 V
52 -58 V
52 -56 V
51 -57 V
52 -56 V
51 -55 V
52 -55 V
52 -55 V
51 -55 V
52 -55 V
51 -54 V
1530 4129 Circle
1582 4129 Circle
1633 4129 Circle
1685 4130 Circle
1736 4130 Circle
1788 4131 Circle
1840 4131 Circle
1891 4133 Circle
1943 4134 Circle
1994 4136 Circle
2046 4138 Circle
2098 4141 Circle
2149 4144 Circle
2201 4148 Circle
2252 4153 Circle
2304 4110 Circle
2356 4104 Circle
2407 4099 Circle
2459 4094 Circle
2510 4090 Circle
2562 4085 Circle
2614 4082 Circle
2665 4079 Circle
2717 4065 Circle
2768 4046 Circle
2820 4029 Circle
2872 4014 Circle
2923 3999 Circle
2975 3985 Circle
3026 3972 Circle
3078 3959 Circle
3130 3947 Circle
3181 3937 Circle
3233 3928 Circle
3284 3920 Circle
3336 3915 Circle
3388 3910 Circle
3439 3907 Circle
3491 3901 Circle
3542 3901 Circle
3594 3906 Circle
3646 3910 Circle
3697 3902 Circle
3749 3886 Circle
3800 3869 Circle
3852 3846 Circle
3904 3824 Circle
3955 3803 Circle
4007 3778 Circle
4058 3752 Circle
4110 3726 Circle
4162 3698 Circle
4213 3669 Circle
4265 3640 Circle
4316 3609 Circle
4368 3577 Circle
4420 3544 Circle
4471 3511 Circle
4523 3477 Circle
4574 3442 Circle
4626 3405 Circle
4678 3369 Circle
4729 3330 Circle
4781 3292 Circle
4832 3252 Circle
4884 3211 Circle
4936 3170 Circle
4987 3127 Circle
5039 3084 Circle
5090 3039 Circle
5142 2994 Circle
5194 2948 Circle
5245 2900 Circle
5297 2851 Circle
5348 2802 Circle
5400 2751 Circle
5452 2699 Circle
5503 2646 Circle
5555 2592 Circle
5606 2537 Circle
5658 2480 Circle
5710 2422 Circle
5761 2364 Circle
5813 2304 Circle
5864 2244 Circle
5916 2184 Circle
5968 2124 Circle
6019 2064 Circle
6071 2005 Circle
6122 1947 Circle
6174 1889 Circle
6226 1833 Circle
6277 1776 Circle
6329 1720 Circle
6380 1665 Circle
6432 1610 Circle
6484 1555 Circle
6535 1500 Circle
6587 1445 Circle
6638 1391 Circle
5938 4167 Circle
1.000 UL
LTb
1530 900 M
5160 0 V
0 3780 V
-5160 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
