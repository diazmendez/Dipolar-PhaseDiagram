%!PS-Adobe-2.0
%%Title: hvsl.T0.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Apr 10 10:29:34 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1020 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1020 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1440 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1440 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1860 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1860 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1.5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2280 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2280 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2700 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2700 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2.5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3120 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3120 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3540 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3540 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 3.5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3960 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3960 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 4)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4380 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4380 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 4.5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4800 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4800 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
6665 600 M
0 2660 V
0 800 R
0 740 V
1.000 UL
LTb
6665 600 M
0 63 V
0 4137 R
0 -63 V
stroke
6665 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5368 600 M
0 2660 V
0 800 R
0 740 V
1.000 UL
LTb
5368 600 M
0 63 V
0 4137 R
0 -63 V
stroke
5368 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 80)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4848 600 M
0 2660 V
0 800 R
0 740 V
1.000 UL
LTb
4848 600 M
0 63 V
0 4137 R
0 -63 V
stroke
4848 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 72)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4329 600 M
0 4200 V
1.000 UL
LTb
4329 600 M
0 63 V
0 4137 R
0 -63 V
stroke
4329 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 64)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4070 600 M
0 4200 V
1.000 UL
LTb
4070 600 M
0 63 V
0 4137 R
0 -63 V
stroke
4070 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 60)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3810 600 M
0 4200 V
1.000 UL
LTb
3810 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3810 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 56)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3291 600 M
0 4200 V
1.000 UL
LTb
3291 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3291 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 48)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3032 600 M
0 4200 V
1.000 UL
LTb
3032 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3032 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 44)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2772 600 M
0 4200 V
1.000 UL
LTb
2772 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2772 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2512 600 M
0 4200 V
1.000 UL
LTb
2512 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2512 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 36)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2253 600 M
0 4200 V
1.000 UL
LTb
2253 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2253 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 32)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1993 600 M
0 4200 V
1.000 UL
LTb
1993 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1993 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 28)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1734 600 M
0 4200 V
1.000 UL
LTb
1734 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1734 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 24)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1474 600 M
0 4200 V
1.000 UL
LTb
1474 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1474 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1215 600 M
0 4200 V
1.000 UL
LTb
1215 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1215 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 16)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
LTb
200 2700 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 200.0 0.0 true true 0 (zero T critical fields)]
] -66.7 MCshow
grestore
grestore
LTb
3940 100 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (linear size)]
] -66.7 MCshow
grestore
1.000 UP
LTb
1344 4380 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (ferro)]
] -66.7 MLshow
grestore
LTb
2123 3540 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (bubbles zone)]
] -66.7 MLshow
grestore
LTb
3161 768 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (symetric stripes zone)]
] -66.7 MLshow
grestore
1.000 UL
LT0
4401 3260 M
0 800 V
2343 0 V
0 -800 V
-2343 0 V
0 800 R
2343 0 V
2.000 UP
1.000 UL
LT0
LTb
4401 3960 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (to ferro)]
] -66.7 MLshow
grestore
LT0
6081 3960 M
543 0 V
1215 3221 M
259 302 V
260 202 V
259 151 V
260 101 V
259 101 V
260 50 V
260 50 V
259 152 V
519 0 V
260 50 V
259 0 V
519 50 V
520 51 V
1297 50 V
1215 3221 TriD
1474 3523 TriD
1734 3725 TriD
1993 3876 TriD
2253 3977 TriD
2512 4078 TriD
2772 4128 TriD
3032 4178 TriD
3291 4330 TriD
3810 4330 TriD
3810 4330 TriD
3810 4330 TriD
4070 4380 TriD
4329 4380 TriD
4848 4430 TriD
5368 4481 TriD
6665 4531 TriD
6352 3960 TriD
2.000 UP
1.000 UL
LT1
LTb
4401 3760 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (to h24 like)]
] -66.7 MLshow
grestore
LT1
1734 2062 TriU
1993 2062 TriU
3291 2213 TriU
6352 3760 TriU
2.000 UP
1.000 UL
LT0
LTb
4401 3560 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (to h23 like)]
] -66.7 MLshow
grestore
LT0
6081 3560 M
543 0 V
1215 1255 M
259 -151 V
260 0 V
519 655 R
259 -252 V
260 -201 V
260 -51 V
259 403 V
519 -403 V
0 202 V
0 -202 V
260 -50 V
259 151 V
519 252 V
520 -252 V
1297 0 V
1215 1255 Circle
1474 1104 Circle
1734 1104 Circle
2253 1759 Circle
2512 1507 Circle
2772 1306 Circle
3032 1255 Circle
3291 1658 Circle
3810 1255 Circle
3810 1457 Circle
3810 1255 Circle
4070 1205 Circle
4329 1356 Circle
4848 1608 Circle
5368 1356 Circle
6665 1356 Circle
6352 3560 Circle
2.000 UP
1.000 UL
LT0
LTb
4401 3360 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (to h2223 like)]
] -66.7 MLshow
grestore
LT0
6081 3360 M
543 0 V
1993 1104 M
260 0 V
259 0 V
260 -50 V
260 0 V
259 302 V
4329 1104 M
519 0 V
520 0 V
1297 0 V
1993 1104 Box
2253 1104 Box
2512 1104 Box
2772 1054 Box
3032 1054 Box
3291 1356 Box
4329 1104 Box
4848 1104 Box
5368 1104 Box
6665 1104 Box
6352 3360 Box
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
